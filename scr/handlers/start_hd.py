from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from create_bot import bot
from db.requests.Users.user_registration_db import registration
from keyboards.InLine_kb.main_inline_kb import main_start_inline_kb, main_email_inline_kb, main_sample_inline_kb

start_router = Router()


@start_router.message(Command('start'))
async def cmd_start(m: Message):
    answer = await registration(m.from_user.id, m.from_user.username)
    if answer:
        await m.answer(text='–ü—Ä–∏–≤–µ—Çüëã\n\n'
                            '–í–∏–∂—É —á—Ç–æ —Ç—ã —Ç—É—Ç –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑.\n'
                            '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —à–∞–±–ª–æ–Ω—ã, –∞ –ø–æ—Å–ª–µ –ø–æ –Ω–∏–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–∞ —Å —Ç–≤–æ–µ–π gmail –ø–æ—á—Ç—ã\n\n'
                            '–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:\n\n'
                            '–î–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —à–∞–±–ª–æ–Ω —Å—Ç—Ä–æ–≥–æ —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞:\n'
                            '<b>—Ç–µ–º–∞ –ø–∏—Å—å–º–∞</b> -> <b>–æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç</b> -> <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è</b>\n\n'
                            '–í –±—É–¥—É—â–µ–º –±—É–¥–µ–º —Ä–∞—Å—à–∏—Ä—è—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª')
        await m.answer(text='–í–æ—Ç —É–¥–æ–±–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏')
        await m.answer(text='–ü–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏', reply_markup=main_start_inline_kb())
    else:
        await m.answer(text='–ü–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏', reply_markup=main_start_inline_kb())


@start_router.callback_query(F.data == 'main_email')
async def write_main_email(call: CallbackQuery):
    await call.message.edit_reply_markup(str(call.message.message_id), reply_markup=main_email_inline_kb())


@start_router.callback_query(F.data == 'main_sample')
async def write_main_sample(call: CallbackQuery):
    await call.message.edit_reply_markup(str(call.message.message_id), reply_markup=main_sample_inline_kb())

@start_router.callback_query(F.data == 'back_main')
async def write_main_kb(call: CallbackQuery):
    await call.message.edit_reply_markup(str(call.message.message_id), reply_markup=main_start_inline_kb())

@start_router.callback_query(F.data == 'main_setting')
async def write_main_setting(call: CallbackQuery):
    await bot.delete_message(call.from_user.id, call.message.message_id)
    await call.message.answer(text='–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
    await call.message.answer(text='–ü–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏', reply_markup=main_start_inline_kb())
